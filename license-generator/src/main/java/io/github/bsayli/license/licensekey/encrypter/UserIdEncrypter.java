package io.github.bsayli.license.licensekey.encrypter;

import static io.github.bsayli.license.common.CryptoUtils.*;

import java.security.GeneralSecurityException;
import java.security.Security;
import javax.crypto.SecretKey;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public final class UserIdEncrypter {

  /**
   * Sample userId (UUID) as typically generated by Keycloak for a registered user. Replace with an
   * actual Keycloak user UUID at runtime.
   */
  public static final String SAMPLE_USER_ID = "ba035b3e-d8b6-4a09-89c7-ab0459f2585b";

  private static final Logger log = LoggerFactory.getLogger(UserIdEncrypter.class);
  private static final String SECRET_KEY_BASE64 = "s/PUyV6Ym/v0A+HehYFZ9GTpatSL1MkcVW1zBLf3cX4=";
  private static final SecretKey ENCRYPTION_KEY = loadAesKeyFromBase64(SECRET_KEY_BASE64);

  static {
    Security.addProvider(new BouncyCastleProvider());
  }

  private UserIdEncrypter() {}

  public static String encrypt(String userId) throws GeneralSecurityException {
    return aesGcmEncryptToBase64(ENCRYPTION_KEY, userId);
  }

  public static String decrypt(String encryptedBase64) throws GeneralSecurityException {
    return aesGcmDecryptFromBase64(ENCRYPTION_KEY, encryptedBase64);
  }

  public static void main(String[] args) throws GeneralSecurityException {
    log.info("User Id (plain): {}", SAMPLE_USER_ID);
    String enc = encrypt(SAMPLE_USER_ID);
    log.info("Encrypted: {}", enc);
    String dec = decrypt(enc);
    log.info("Decrypted: {}", dec);
  }
}
